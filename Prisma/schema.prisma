generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Status {
    INPROGRESS
    COMPLETED
}

model User {
    id            Int      @id @default(autoincrement())
    email         String   @unique
    password      String   @db.VarChar(250)
    profile       Profile?
    createdTasks  Task[]   @relation("created-by")
    createdTopics Topic[]  @relation()
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
}

model Profile {
    id        Int      @id @default(autoincrement())
    firstName String
    lastName  String
    userId    Int      @unique
    user      User     @relation(fields: [userId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Task {
    id              Int      @id @default(autoincrement())
    taskName        String   @db.VarChar(30)
    taskDescription String
    linksUrl        String?  @db.VarChar(255)
    status          Status   @default(INPROGRESS)
    createdById     Int
    createdBy       User     @relation("created-by", fields: [createdById], references: [id], onDelete: Cascade)
    topics          Int[]
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
}

model Topic {
    id        Int      @id @default(autoincrement())
    topicName String   @db.VarChar(30)
    userId    Int
    user      User     @relation(fields: [userId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
